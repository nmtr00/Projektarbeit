While using a combination of Abaqus script and Python can automate the process of testing different material models, finding the "best" model is not a straightforward task. Here's how you can approach it:

1. Define your criteria for "best":

Accuracy: How closely the simulation results match your experimental data (stress-strain curves, failure modes, etc.).
Computational efficiency: How quickly the simulation runs with different models.
Simplicity: How easy it is to define the material properties for each model.
2. Select candidate material models:

Based on your material type (metal, plastic, composite, etc.) and the expected behavior (linear, nonlinear, elastic-plastic, etc.), choose a few relevant material models from the Abaqus library.
3. Create Python script for automation:

Use Python scripting to automate the following:
Generate Abaqus input files with different material models and properties.
Run the simulations using Abaqus CAE.
Extract relevant results (stress, strain, etc.) from the output files.
Calculate error metrics (e.g., root mean square error) comparing simulation results with your experimental data.
4. Analyze and compare results:

Use Python data analysis tools (e.g., pandas, matplotlib) to analyze the error metrics and other relevant data.
Identify the material model with the lowest error and acceptable computational cost.
Here are some additional points to consider:

Material property calibration: You might need to calibrate the material properties for each model using optimization techniques to achieve the best accuracy. This can also be automated within the Python script.
Model complexity: Simpler models might be less accurate but computationally cheaper. Consider the trade-off between accuracy and efficiency based on your needs.
Experimental data quality: Ensure your experimental data is accurate and reliable for meaningful comparisons with simulation results.
Helpful Resources:

Creating materials with Python in Abaqus: https://www.researchgate.net/topic/Abaqus~Smart-Materials/publications
Abaqus material library: https://www.3ds.com/support/documentation
Python data analysis libraries:
pandas: https://pandas.pydata.org/
matplotlib: https://matplotlib.org/
Remember, finding the "best" material model is an iterative process. You might need to refine your criteria, try additional models, and adjust the Python script based on your specific experiment and desired outcomes.